{"version":3,"sources":["components/Navbar.js","context/alert/alertContext.js","context/github/githubContext.js","components/Search.js","components/Card.js","pages/Home.js","pages/About.js","components/Repos.js","pages/Profile.js","components/Alert.js","context/alert/alertReducer.js","context/types.js","context/alert/AlertState.js","context/github/githubReducer.js","context/github/GithubState.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","exact","to","AlertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","github","type","placeholder","onChange","e","target","onKeyPress","key","clearUsers","trim","hide","search","show","Card","user","src","avatar_url","alt","login","Home","loading","users","map","id","About","Repos","repos","Fragment","repo","href","html_url","rel","name","Profile","match","getUser","getRepos","urlName","params","useEffect","company","location","bio","blog","followers","following","public_repos","public_gists","style","width","Alert","role","text","aria-label","onClick","aria-hidden","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","CLIENT_ID","process","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","withCreds","url","GithubState","a","setLoading","axios","get","response","data","items","App","path","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bca99f26.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  return (\n    <nav className='navbar navbar-dark bg-primary navbar-expand-lg'>\n      <div className='navbar-brand'>Github Search</div>\n      <ul className='navbar-nav'>\n        <li className='nav-item'>\n          <NavLink exact className='nav-link' to='/React-hooks/'>\n            Main\n          </NavLink>\n        </li>\n        <li className='nav-item'>\n          <NavLink className='nav-link' to='/React-hooks/about'>\n            Infromation\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","import { createContext } from 'react';\n\nexport const AlertContext = createContext();\n","import { createContext } from 'react';\n\nexport const GithubContext = createContext()","import React, { useContext, useState } from 'react';\nimport { AlertContext } from '../context/alert/alertContext';\nimport { GithubContext } from '../context/github/githubContext';\n\nexport const Search = () => {\n  const [value, setValue] = useState('');\n  const alert = useContext(AlertContext);\n  const github = useContext(GithubContext);\n\n  const onSubmit = e => {\n    if (e.key !== 'Enter') {\n      return;\n    }\n\n    github.clearUsers();\n\n    if (value.trim()) {\n      alert.hide();\n      github.search(value.trim());\n    } else {\n      alert.show('Enter user details!');\n    }\n  };\n  return (\n    <div className='form-group'>\n      <input\n        type='text'\n        className='form-control'\n        placeholder='Enter username'\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        onKeyPress={onSubmit}\n      />\n    </div>\n  );\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Card = ({ user }) => (\n  <div className='card'>\n    <img src={user.avatar_url} alt={user.login} className='card-img-top' />\n    <div className='card-body'>\n      <h5 className='card-title'>{user.login}</h5>\n      <Link to={'/profile/' + user.login} className='btn btn-primary'>\n        Open\n      </Link>\n    </div>\n  </div>\n);\n","import React, { Fragment, useContext } from 'react';\nimport { Search } from '../components/Search';\nimport { Card } from '../components/Card';\nimport { GithubContext } from '../context/github/githubContext';\n\nexport const Home = () => {\n  const { loading, users } = useContext(GithubContext);\n\n  return (\n    <Fragment>\n      <Search />\n\n      <div className='row'>\n        {loading ? (\n          <p className='text-center'>Loading...</p>\n        ) : (\n          users.map(user => (\n            <div className='col-sm-4 mb-4' key={user.id}>\n              <Card user={user}/>\n            </div>\n          ))\n        )}\n      </div>\n    </Fragment>\n  );\n};\n","import React from 'react';\n\nexport const About = () => {\n  return (\n    <div className='jumbotron jumbotron-fluid'>\n      <div className='container'>\n        <h1 className='display-4'>Information</h1>\n        <p className='lead'>\n          App version: <strong>1.0.0</strong>\n        </p>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Repos = ({ repos }) => (\n  <React.Fragment>\n    {repos.map(repo => (\n      <div className='card mb-3' key={repo.id}>\n        <div className='card-body'>\n          <h5>\n            <a href={repo.html_url} target='_blank' rel='noopener noreferrer'>\n              {repo.name}\n            </a>\n          </h5>\n        </div>\n      </div>\n    ))}\n  </React.Fragment>\n);\n","import React, { useContext, useEffect, Fragment } from 'react';\nimport { GithubContext } from '../context/github/githubContext';\nimport { Link } from 'react-router-dom';\nimport { Repos } from '../components/Repos';\n\nexport const Profile = ({ match }) => {\n  const { getUser, getRepos, loading, user, repos } = useContext(GithubContext);\n  const urlName = match.params.name;\n\n  useEffect(() => {\n    getUser(urlName);\n    getRepos(urlName);\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading) {\n    return <p className='text-center'>Loading...</p>;\n  }\n\n  const {\n    name,\n    company,\n    avatar_url,\n    location,\n    bio,\n    blog,\n    login,\n    html_url,\n    followers,\n    following,\n    public_repos,\n    public_gists\n  } = user;\n\n  return (\n    <Fragment>\n      <Link to='/React-hooks/' className='btn btn-link'>\n        To the main\n      </Link>\n\n      <div className='card mb-4'>\n        <div className='card-body'>\n          <div className='row'>\n            <div className='col-sm-3 text-center'>\n              <img src={avatar_url} alt={name} style={{ width: '150px' }} />\n              <h1>{login}</h1>\n              {location && <p>Location: {location}</p>}\n            </div>\n            <div className='col'>\n              {bio && (\n                <Fragment>\n                  <h3>Bio</h3>\n                  <p>{bio}</p>\n                </Fragment>\n              )}\n              <a\n                href={html_url}\n                target='_blank'\n                rel='noopener noreferrer'\n                className='btn btn-dark'\n              >\n                Open the profile\n              </a>\n              <ul>\n                {login && (\n                  <li>\n                    <strong>Username: </strong> {login}\n                  </li>\n                )}\n                {company && (\n                  <li>\n                    <strong>Company: </strong> {company}\n                  </li>\n                )}\n                {blog && (\n                  <li>\n                    <strong>Website: </strong> {blog}\n                  </li>\n                )}\n              </ul>\n              <div className='badge badge-primary'>Followers: {followers}</div>\n              <div className='badge badge-success'>Following: {following}</div>\n              <div className='badge badge-info'>\n                Repositories: {public_repos}\n              </div>\n              <div className='badge badge-dark'>Gists: {public_gists}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Repos repos={repos} />\n    </Fragment>\n  );\n};\n","import React, { useContext } from 'react';\nimport { AlertContext } from '../context/alert/alertContext';\n\nexport const Alert = () => {\n  const { alert, hide } = useContext(AlertContext);\n\n  if (!alert) return null;\n\n  return (\n    <div\n      className={`alert alert-${alert.type || 'secondary'} alert-dismissible`}\n      role='alert'\n    >\n      {alert.text}\n      <button type='button' className='close' aria-label='Close' onClick={hide}>\n        <span aria-hidden='true'>&times;</span>\n      </button>\n    </div>\n  );\n};\n","import { SHOW_ALERT, HIDE_ALERT } from '../types';\n\nconst handlers = {\n  [SHOW_ALERT]: (state, action) => action.payload,\n  [HIDE_ALERT]: () => null,\n  DEFAULT: state => state\n};\n\nexport const alertReducer = (state, action) => {\n  const handler = handlers[action.type] || handlers.DEFAULT;\n  return handler(state, action);\n};\n","export const SHOW_ALERT = 'SHOW_ALERT'\nexport const HIDE_ALERT = 'HIDE_ALERT'\nexport const CLEAR_USERS = 'CLEAR_USERS'\nexport const GET_REPOS = 'GET_REPOS'\nexport const GET_USER = 'GET_USERS'\nexport const SEARCH_USERS = 'SEARCH_USERS'\nexport const SET_LOADING = 'SET_LOADING'","import React, { useReducer } from 'react';\nimport { AlertContext } from './alertContext';\nimport { alertReducer } from './alertReducer';\nimport { HIDE_ALERT, SHOW_ALERT } from '../types';\n\nexport const AlertState = ({ children }) => {\n  const [state, dispatch] = useReducer(alertReducer, null);\n\n  const hide = () => dispatch({ type: HIDE_ALERT });\n  const show = (text, type = 'secondary') =>\n    dispatch({ type: SHOW_ALERT, payload: { type, text } });\n\n  return (\n    <AlertContext.Provider value={{ hide, show, alert: state }}>\n      {children}\n    </AlertContext.Provider>\n  );\n};\n","import {\n  SEARCH_USERS,\n  GET_REPOS,\n  GET_USER,\n  SET_LOADING,\n  CLEAR_USERS\n} from '../types';\n\nconst handlers = {\n  [SEARCH_USERS]: (state, { payload }) => ({\n    ...state,\n    users: payload,\n    loading: false\n  }),\n  [GET_REPOS]: (state, { payload }) => ({\n    ...state,\n    repos: payload,\n    loading: false\n  }),\n  [GET_USER]: (state, { payload }) => ({\n    ...state,\n    user: payload,\n    loading: false\n  }),\n  [SET_LOADING]: state => ({\n    ...state,\n    loading: true\n  }),\n  [CLEAR_USERS]: state => ({\n    ...state,\n    users: []\n  }),\n  [SET_LOADING]: state => ({\n    ...state,\n    loading: true\n  }),\n  DEFAULT: state => state\n};\n\nexport const githubReducer = (state, action) => {\n  const handler = handlers[action.type] || handlers.DEFAULT;\n  return handler(state, action);\n};\n","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport { GithubContext } from './githubContext';\nimport { githubReducer } from './githubReducer';\nimport {\n  CLEAR_USERS,\n  GET_REPOS,\n  GET_USER,\n  SEARCH_USERS,\n  SET_LOADING\n} from '../types';\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\n\nconst withCreds = url => {\n  return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`;\n};\n\nexport const GithubState = ({ children }) => {\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: []\n  };\n\n  const [state, dispatch] = useReducer(githubReducer, initialState);\n\n  const search = async value => {\n    setLoading();\n\n    const response = await axios.get(\n      withCreds(`https://api.github.com/search/users?q=${value}&`)\n    );\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: response.data.items\n    });\n  };\n\n  const getUser = async name => {\n    setLoading();\n\n    const response = await axios.get(\n      withCreds(`https://api.github.com/users/${name}?`)\n    );\n\n    dispatch({\n      type: GET_USER,\n      payload: response.data\n    });\n  };\n\n  const getRepos = async name => {\n    setLoading();\n\n    const response = await axios.get(\n      withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`)\n    );\n\n    dispatch({\n      type: GET_REPOS,\n      payload: response.data\n    }); \n  };\n\n  const clearUsers = () => {\n    //...\n\n    dispatch({\n      type: CLEAR_USERS\n    });\n  };\n\n  const setLoading = () => {\n    //...\n\n    dispatch({\n      type: SET_LOADING\n    });\n  };\n\n  const { user, users, repos, loading } = state;\n\n  return (\n    <GithubContext.Provider\n      value={{\n        setLoading,\n        search,\n        getUser,\n        getRepos,\n        clearUsers,\n        user,\n        users,\n        repos,\n        loading\n      }}\n    >\n      {children}\n    </GithubContext.Provider>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { Home } from './pages/Home';\nimport { About } from './pages/About';\nimport { Profile } from './pages/Profile';\nimport { Alert } from './components/Alert';\nimport { AlertState } from './context/alert/AlertState';\nimport { GithubState } from './context/github/GithubState';\n\nfunction App() {\n  return (\n    <GithubState>\n      <AlertState>\n        <BrowserRouter>\n          <Navbar />\n          <div className='container pt-4'>\n            <Alert alert={{ text: 'Test alert' }} />\n            <Switch>\n              <Route exact path='/React-hooks/' component={Home} />\n              <Route path='/React-hooks/about' component={About} />\n              <Route path='/React-hooks/profile/:name' component={Profile} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </AlertState>\n    </GithubState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}